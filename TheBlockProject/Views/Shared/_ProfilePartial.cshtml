@using Microsoft.Ajax.Utilities
@using TheBlockProject.Models
@model TheBlockProject.ViewModels.ProfileViewModel
    
@{
    var isMarried = Model.User.IsMarried ? "Yes" : "No";
    var fullName = Model.User.FirstName + " " + Model.User.LastName;
    var secondaryLanguage = Model.User.OtherLanguage.Length < 1 ? Model.User.OtherLanguage : "None";
}

<h2>@fullName</h2>
<hr/>
<div class="container">
@if(Model.User.UserTypeId == UserType.HOST)
{
<h4>Photos</h4>
<div class="container">
    <div class="row">
        <!-- Carousel -->
        @if (Model.User.UserTypeId == UserType.HOST && Model.Photos != null && Model.Photos.Any())
        {

            var photos = Model.Photos.ToList();
            @Html.Partial("_CarouselPartial", photos)
        }
        else
        {
            <div class="col-xs-12">
                <p>The user currently has no photo to display.</p>

            </div>
        }
    </div>
    <a data-toggle="modal" data-target="#photo-modal"><span>Add Photo</span></a>
</div>
<div>
    <h4>Videos</h4>
    <div class="container">
        <div class="row">
            <div class="col-xs-12">
                @if (Model.Videos != null && Model.Videos.Any())
                {
                    var index = 1;
                    <!-- List of Videos as links -->
                    foreach (var video in Model.Videos)
                    {
                        <p>Video #@index: <a href="@video.Url">Link</a></p>
                        index++;
                    }
                }
                else
                {
                    <p>The user currently has no provided link for a video.</p>
                }
            </div>
        </div>
        <a data-toggle="modal" data-target="#video-modal"><span>Add Video</span></a>
    </div>
</div>

<hr/>
}

<div>
    <h4>Biography</h4>
    <div class="container">
        <div class="row">
            <div class="col-xs-12">
                <p>@Model.User.Biography</p>
                @if (Model.User.Biography.IsNullOrWhiteSpace())
                {
                    <p>There is no biography for this user.</p>
                }

            </div>
        </div>
        <a data-toggle="modal" data-target="#biography-modal"><span>Edit Biography</span></a>
    </div>
</div>

<!-- Modal for biography-->
<div id="biography-modal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Edit Biography</h4>
            </div>
            <div class="modal-body">
                @using (@Html.BeginForm("UpdateBiography", "Profile", FormMethod.Post, new {role = "form"}))
                {
                    <div class="form-group">
                        @Html.TextAreaFor(m => m.Biography, 6, 100, new {})
                    </div>

                    <div class="form-group">
                        <input type="submit" class="btn btn-primary" value="Save"/>
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    </div>
                }

            </div>
        </div>
    </div>
</div>

<!--Modal for photo-->
<div id="photo-modal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Edit Biography</h4>
            </div>
            <div class="modal-body">
                @using (@Html.BeginForm("AddPhoto", "Profile", FormMethod.Post, new {role = "form", enctype = "multipart/form-data" }))
                {
                    <div class="form-group">
                        @Html.LabelFor(m => m.File, new { @class = "control-label col-md-2"})
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.File, new { type="file" })
                            @Html.ValidationMessageFor(m => m.File)
                            <br/>
                        </div>
                    </div>

                    <div class="form-group">
                        <input type="submit" class="btn btn-primary" value="Save"/>
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    </div>
                }

            </div>
        </div>
    </div>
</div>

<!--Modal for video-->
<div id="video-modal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Add Video Url</h4>
            </div>
            <div class="modal-body">
                @using (@Html.BeginForm("AddVideoUrl", "Profile", FormMethod.Post, new {role = "form"}))
                {
                    <div class="form-group">
                        @Html.TextBoxFor(m => m.VideoUrl, new {width = "50em"})
                    </div>

                    <div class="form-group">
                        <input type="submit" class="btn btn-primary" value="Save"/>
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    </div>
                }

            </div>
        </div>
    </div>
</div>





<hr/>

<div>
    <h4>Personal Information</h4>
    <div class="container">
        <div class="row">
            <div class="col-xs-12 col-sm-4">
                <p><b>Age</b>: @Model.User.Age</p>
            </div>
            <div class="col-xs-12 col-sm-4">
                <p><b>Gender</b>: @Model.User.Gender.Name</p>
            </div>
            <div class="col-xs-12 col-sm-4">
                <p><b>Race/Ethnicity</b>: @Model.User.Race.Name</p>
            </div>
        </div>

        <div class="row">
            <div class="col-xs-12 col-sm-4">
                <p><b>Neighborhood</b>: @Model.User.Neighborhood.Name</p>
            </div>
            <div class="col-xs-12 col-sm-4">
                <p><b>Married?</b>: @isMarried</p>
            </div>
            <div class="col-xs-12 col-sm-2">
                <p><b>Primary Language</b>: @Model.User.Language.Name</p>
            </div>
            <div class="col-xs-12 col-sm-2">
                <p><b>Secondary Langauge</b>: @secondaryLanguage</p>
            </div>
        </div>
    </div>

</div>

<hr/>

<div>
    <h4>Survey Answers</h4>
    @if (Model.User.SurveyComplete)
    {
        List<Answer> answerList = Model.Answers.ToList();
        var questions = new string[Model.Answers.Count()];
        var answers = new string[questions.Length];
        for (int i = 0; i < questions.Length; i++)
        {
            questions[i] = answerList[i].Question.Text;
            answers[i] = answerList[i].Text;
        }
        <div class="table-responsive">
            <table class="table table-striped">
                <thead>
                <tr>
                    <th>Question</th>
                    <th>Answer</th>
                </tr>
                </thead>
                <tbody>
                @for (int i = 0; i < answers.Length; i++)
                {
                    <tr>
                        <td>@questions[i]</td>
                        <td>@answers[i]</td>
                    </tr>
                }
                </tbody>
            </table>
        </div>

    }
    else
    {
        <p>The user has not completed the survey yet.</p>
    }
</div>

</div>
