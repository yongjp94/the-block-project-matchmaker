@using Microsoft.Ajax.Utilities
@using TheBlockProject.Models
@model TheBlockProject.Models.SurveyViewModel

@{
    ViewBag.Title = "Questionnaire";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Questionnaire</h2>

<p>
    This is a page to use your build your profile through completing a questionnaire.
    Please note that all questions are required to be answered.
    You will not be able to participate in the matching process without completing the profile first.
</p>
<hr />

@using (Html.BeginForm("Submit", "Survey", FormMethod.Post, new { role = "form" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary("", new { @class = "text-danger" })

    @Html.HiddenFor(m => m.User.Id)

    var questionNumber = 0;

    <h4>Matchmaking Questions</h4>

    foreach (var question in Model.Questions)
    {
        var answers = Model.Answers.Where(a => a.QuestionId == question.Id);
        var enumerable = answers as Answer[] ?? answers.ToArray();
        if (enumerable.ToList().Any())
        {
            <div class="form-group">
                <h5>
                    <i>Q #@(questionNumber + 1)</i>:
                    @if (question.SurveyId == 3)
                    {
                        if (User.IsInRole(UserType.HOST_ROLE))
                        {
                            <span>@question.Text</span>
                        }
                        else
                        {
                            <span>@question.Text2</span>
                        }
                    }
                    else
                    {
                        <span>@question.Text</span>
                    }
                </h5>
                <!-- If a question has a comment, display it here -->
                @if (!question.Comment.IsNullOrWhiteSpace())
                {
                    <h6>@question.Comment</h6>
                }

                <!-- Display answer choices if multiple choice-->
                
                @{var answerList = enumerable.ToList();}
                @Html.DropDownListFor(m => m.UserAnswerIds[questionNumber],
                    new SelectList(answerList, "Id", "Text"),
                    "Select your answer", new { @class = "form-control" })
            </div>
        }

        questionNumber++;
    }
    <div class="form-group">
        <div class="col-md-offset-5 col-md-12">
            <input type="submit" class="btn btn-primary" value="Submit" />
        </div>
    </div>


}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
